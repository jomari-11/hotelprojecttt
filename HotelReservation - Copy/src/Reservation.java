
import static com.oracle.jrockit.jfr.Transition.From;
import com.sun.org.apache.bcel.internal.generic.Select;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Psycho
 */
public class Reservation extends javax.swing.JFrame {

    private Object jTextFieldFN;

    /**
     * Creates new form Reservation
     */
    public Reservation() {
        initComponents();
        show_booking();
           //showTable();
    }
    public ArrayList<User> UserList(){
        ArrayList<User> usersList = new ArrayList<>();
        try{   
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           String url="jdbc:sqlserver://localhost:1433;databaseName=HotelReservationSystem;user=sa;password=123";
           Connection con=DriverManager.getConnection(url);
           String query2 = "SELECT id,firstname,lastname,noofperson,checkindate,noofdays,specialnote,roomtype,roomno,price FROM Reservation1";
           java.sql.Statement st  = con.createStatement();
           ResultSet rs = st.executeQuery(query2);
           User user;
           while(rs.next()){
               user= new User(rs.getInt("id"),rs.getString("firstname"),rs.getString("lastname"),rs.getString("noofperson"),rs.getString("checkindate"), rs.getInt("noofdays"),rs.getString("specialnote"),rs.getString("roomtype"),rs.getString("roomno"),rs.getInt("price"));
               usersList.add(user);
           }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
            
        }
        return usersList;
        
    }
    public void show_booking(){
        ArrayList<User> list = UserList();
        DefaultTableModel model = (DefaultTableModel) booktable.getModel();
        Object[] row = new Object[10];
        for(int i=0; i<list.size();i++){
            row[0]=list.get(i).getBookID();
            row[1]=list.get(i).getFirstname();
            row[2]=list.get(i).getLastname();
            row[3]=list.get(i).getNoofPerson();
            row[4]=list.get(i).getCheckinDate();
            row[5]=list.get(i).getNoofDays();
            row[6]=list.get(i).getSpecialnote();
            row[7]=list.get(i).getRoomtype();
            row[8]=list.get(i).getRoomno();
            row[9]=list.get(i).getPrice();
            model.addRow(row);
            
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        reservationtab = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomtable = new javax.swing.JTable();
        reservations = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        age = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        postcode = new javax.swing.JTextField();
        phoneno = new javax.swing.JTextField();
        add = new javax.swing.JTextField();
        numperson = new javax.swing.JTextField();
        bdate = new com.toedter.calendar.JDateChooser();
        chckin = new com.toedter.calendar.JDateChooser();
        chckout = new com.toedter.calendar.JDateChooser();
        bookroom = new javax.swing.JButton();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        roomno = new javax.swing.JTextField();
        noofdays = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        spnote = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        roomtype1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        bookrooms = new javax.swing.JScrollPane();
        booktable = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        roomtable.setBackground(new java.awt.Color(250, 128, 114));
        roomtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"ROOM101", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM102", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM103", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM104", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM105", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM106", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM107", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM108", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM109", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM110", "STANDARD", "1 QUEEN SIZE ", "3000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi"},
                {"ROOM111", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM112", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM113", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM114", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM115", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM116", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM117", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM118", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM119", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM120", "DOUBLE", "2 QUEEN SIZE", "5000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bath Tub"},
                {"ROOM121", "TRIPLE", "1 QUEEN SIZE/1 SINGLE SIZE", "7000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area"},
                {"ROOM122", "TRIPLE", "1 QUEEN SIZE/1 SINGLE SIZE", "7000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area"},
                {"ROOM123", "TRIPLE", "3 SINGLE BED", "6000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area"},
                {"ROOM124", "TRIPLE", "3 SINGLE BED", "6000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area"},
                {"ROOM125", "QUADRUPLE", "4 QUEEN SIZE", "10000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area - Kitchenette"},
                {"ROOM126", "QUADRUPLE", "4 QUEEN SIZE", "10000", "- Air Conditioning - Welcome Kit - Flat-screen TV (both National  and International channels) - In-room safe - Direct Dial Telephone - Free Wifi - Bathtub - Working Area - Kitchenette"}
            },
            new String [] {
                "Room No.", "Room Type", "Bed Type", "Price", "Ammenities"
            }
        ));
        roomtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomtable);
        if (roomtable.getColumnModel().getColumnCount() > 0) {
            roomtable.getColumnModel().getColumn(0).setMinWidth(60);
            roomtable.getColumnModel().getColumn(0).setMaxWidth(50);
            roomtable.getColumnModel().getColumn(1).setMinWidth(80);
            roomtable.getColumnModel().getColumn(1).setMaxWidth(50);
            roomtable.getColumnModel().getColumn(2).setMinWidth(150);
            roomtable.getColumnModel().getColumn(2).setMaxWidth(50);
            roomtable.getColumnModel().getColumn(3).setMinWidth(30);
            roomtable.getColumnModel().getColumn(3).setMaxWidth(40);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        reservationtab.addTab("Rooms", jPanel2);

        reservations.setBackground(new java.awt.Color(250, 128, 114));

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel2.setText("First Name");

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel3.setText("LastName");

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel4.setText("Gender");

        jLabel5.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel5.setText("Age");

        jLabel6.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel6.setText("Birthdate");

        jLabel7.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel7.setText("Phone #");

        jLabel8.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel8.setText("Address");

        jLabel9.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel9.setText("Post Code");

        jLabel10.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel10.setText("No. Person");

        jLabel11.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel11.setText("Check-In Date");

        jLabel12.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel12.setText("No Of Days");

        jLabel13.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel13.setText("Special Note");

        jLabel14.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel14.setText("RoomType");

        phoneno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenoActionPerformed(evt);
            }
        });

        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        numperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numpersonActionPerformed(evt);
            }
        });

        bookroom.setText("Book Room");
        bookroom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookroomActionPerformed(evt);
            }
        });

        male.setText("Male");

        female.setText("Female");

        jLabel15.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel15.setText("RoomNo");

        spnote.setColumns(20);
        spnote.setRows(5);
        jScrollPane2.setViewportView(spnote);

        jLabel17.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel17.setText("Price");

        jLabel16.setFont(new java.awt.Font("Bodoni MT", 1, 18)); // NOI18N
        jLabel16.setText("Check-out Date");

        javax.swing.GroupLayout reservationsLayout = new javax.swing.GroupLayout(reservations);
        reservations.setLayout(reservationsLayout);
        reservationsLayout.setHorizontalGroup(
            reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationsLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(reservationsLayout.createSequentialGroup()
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel13))
                        .addGap(30, 30, 30)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fname)
                                .addComponent(lname)
                                .addComponent(age)
                                .addComponent(phoneno)
                                .addComponent(bdate, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                                .addGroup(reservationsLayout.createSequentialGroup()
                                    .addComponent(male)
                                    .addGap(18, 18, 18)
                                    .addComponent(female))))
                        .addGap(30, 30, 30)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11))
                                .addGap(26, 26, 26)
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chckin, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numperson, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(postcode, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomno, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(roomtype1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(noofdays, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chckout, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(reservationsLayout.createSequentialGroup()
                        .addComponent(bookroom, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(195, 195, 195)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        reservationsLayout.setVerticalGroup(
            reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationsLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(chckin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(reservationsLayout.createSequentialGroup()
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(postcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(numperson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(male)
                            .addComponent(female))
                        .addGap(18, 18, 18)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel5)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel16)
                    .addComponent(chckout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(reservationsLayout.createSequentialGroup()
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reservationsLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(noofdays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(roomtype1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(roomno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))
                    .addGroup(reservationsLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(reservationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, Short.MAX_VALUE)))
                .addComponent(bookroom, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        reservationtab.addTab("Reservations", reservations);

        booktable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BookID", "Firstname", "Lastname", "No.of Person", "CheckInDate", "NoofDays", "SpecialNote", "RoomType", "RoomNo", "Price"
            }
        ));
        bookrooms.setViewportView(booktable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookrooms, javax.swing.GroupLayout.DEFAULT_SIZE, 827, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookrooms, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE))
        );

        reservationtab.addTab("Booked Rooms", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reservationtab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reservationtab)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bookroomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookroomActionPerformed
        String firstname = fname.getText();
        String lastname = lname.getText();
        String Gender = null;
        String Age = age.getText();
        String PhoneNum =phoneno.getText();
        String Address = add.getText();
        String Postcode = postcode.getText();
        String NoofPerson = numperson.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd");
        String Roomtype = roomtype1.getText();
        String Roomnum = roomno.getText();
        String Price = price.getText();
        String Specialnote = spnote.getText();
        String NoofDays = noofdays.getText();
        
        
        
        
        try{   
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
           String url="jdbc:sqlserver://localhost:1433;databaseName=HotelReservationSystem;user=sa;password=123";
           Connection con=DriverManager.getConnection(url);
           String sql = "INSERT INTO Reservation1 (firstname,lastname,gender,age,birthdate,phoneno,address,postcode,noofperson,checkindate,checkoutdate,specialnote,noofdays,roomtype,roomno,price)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
           PreparedStatement pst=con.prepareStatement(sql);
           pst.setString(1, firstname);
           pst.setString(2, lastname);
           if (male.isSelected()){
               Gender = "Male";
           }
           if (female.isSelected()){
               Gender = "Female";
           }                   
           pst.setString(3, Gender);
           pst.setString(4,Age);
           String Birthdate = sdf.format(bdate.getDate());
           pst.setString(5,  Birthdate);
           pst.setString(6,  PhoneNum);
           pst.setString(7,  Address);
           pst.setString(8,  Postcode);
           pst.setString(9, NoofPerson);           
           String Checkin = sdf.format(chckin.getDate().toString());
           pst.setString(10, Checkin);
           String Checkout = sdf.format(chckout.getDate());
           pst.setString(11, Checkout);
           pst.setString(12, Specialnote);
           pst.setString(13, NoofDays);
           pst.setString(14, Roomtype);
           pst.setString(15, Roomnum);
           pst.setString(16, Price);
           pst.executeUpdate();
           DefaultTableModel model = (DefaultTableModel) booktable.getModel();
           model.setRowcount(0);
           show_booking();
           JOptionPane.showMessageDialog(this, "Sign up successfully!!!"); 
//           if (k==1){
//                JOptionPane.showMessageDialog(this, "Sign up successfully!!!");
//                fname.setText("");
//                lname.setText("");
//                user.setText("");
//                pass.setText("");
//                
//            }
//            else{
//                JOptionPane.showMessageDialog(this, "Sign up error!!!");
//            }
////           if(fname.getText().equals("")||lname.getText().equals("")||numperson.getText().equals("")||noofdays.getText().equals("")||spnote.getText().equals("")||roomtype1.getText().equals("")||roomno.getText().equals("")||price.getText().equals("")){
////               JOptionPane.showMessageDialog(null, "Fill all the data!");
////           }
////           else{
////               String checkindate =sdf.format(chckin.getDate());
////               //String data[]={fname.getText(),lname.getText(),numperson.getText(),noofdays.getText(),spnote.getText(),roomtype1.getText(),roomno.getText(),price.getText()};
////               DefaultTableModel tblModel=(DefaultTableModel)booktable.getModel();
////
////               tblModel.addRow(new Object[]{checkindate});// row added
////
////               JOptionPane.showMessageDialog(null,"Add Data Successfully ..!!");
////
//////                fname.setText("");
//////                lname.setText("");
//////                numperson.setText("");
//////                
//////                noofdays.setText("");
//////                spnote.setText("");
//////                roomtype1.setText("");
//////                roomno.setText("");
//////                price.setText("");
////                
////                
////           }
           
           
           
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
            
        }
//        try{
//           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//           String url="jdbc:sqlserver://localhost:1433;databaseName=HotelReservationSystem;user=sa;password=123";
//           Connection con=DriverManager.getConnection(url);
//           PreparedStatement pst = con.prepareStatement("SELECT id,Firstname,Lastname,NoPerson,CheckInDate,CheckOutDate,SpecialNote,RoomType,RoomNo,Price FROM Reservation");
//           DefaultTableModel tm =(DefaultTableModel)bookrooms.getModel();
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null, e);
//            
//        }
        
        
    }//GEN-LAST:event_bookroomActionPerformed
//    public void showTable(){
//
//        try {
//            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
//            String url="jdbc:sqlserver://localhost:1433;databaseName=HotelReservationSystem;user=sa;password=123";
//            Connection con=DriverManager.getConnection(url);
//            Statement stmt = (Statement) con.createStatement();
//            String query = "Select id,firstname,lastname,noofperson,checkindate,noofdays,roomtype,roomno,price From Reservations";
//            stmt = (Statement) con.prepareStatement(query);
//            ResultSet rs = stmt.executeQuery(query);
//            
//
//            int row = 0, rowIndex = 0;
//
//            if(rs.next()){
//                rs.last();
//                row = rs.getRow();
//                rs.beforeFirst();
//            }
//            
//            String [] [] records = new String[row][10];
//
//            while(rs.next()){
//
//                records[rowIndex][0] = rs.getString(1);
//                records[rowIndex][1] = rs.getString(2);
//                records[rowIndex][2] = rs.getString(3);
//                records[rowIndex][3] = rs.getString(4);
//                records[rowIndex][4] = rs.getString(5);
//                records[rowIndex][5] = rs.getString(6);
//                records[rowIndex][6] = rs.getString(7);
//                records[rowIndex][7] = rs.getString(8);
//                records[rowIndex][8] = rs.getString(9);
//                records[rowIndex][9] = rs.getString(10);
//                
//                
//                rowIndex++;
//            }
//            String [] cols = {"BookID", "Firstname", "Lastname", "NoofPerson", "CheckInDate", "NoofDays", "SpecialNote", "RoomType", "RoomNo", "Price"};
//            DefaultTableModel model = new DefaultTableModel(records,cols);
//            booktable.setModel((TableModel) model);
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null, e);
//            
//        }
//    }
//    public void refreshTable(){
//
//        DefaultTableModel tmodel = (DefaultTableModel)booktable.getModel();
//        tmodel.setRowCount(0);
//        showTable();
//    }
    private void numpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numpersonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numpersonActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed

    private void phonenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenoActionPerformed

    private void roomtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomtableMouseClicked
        
        int row=roomtable.getSelectedRow();
        String roomno1 = roomtable.getModel().getValueAt(row ,0).toString();
        String roomtype = roomtable.getModel().getValueAt(row,1).toString();
        String price1 = roomtable.getModel().getValueAt(row,3).toString();
        roomno.setText(roomno1);
        roomtype1.setText(roomtype);
        price.setText(price1);
    }//GEN-LAST:event_roomtableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reservation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField add;
    private javax.swing.JTextField age;
    private com.toedter.calendar.JDateChooser bdate;
    private javax.swing.JButton bookroom;
    private javax.swing.JScrollPane bookrooms;
    private javax.swing.JTable booktable;
    private com.toedter.calendar.JDateChooser chckin;
    private com.toedter.calendar.JDateChooser chckout;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField lname;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField noofdays;
    private javax.swing.JTextField numperson;
    private javax.swing.JTextField phoneno;
    private javax.swing.JTextField postcode;
    private javax.swing.JTextField price;
    private javax.swing.JPanel reservations;
    private javax.swing.JTabbedPane reservationtab;
    private javax.swing.JTextField roomno;
    private javax.swing.JTable roomtable;
    private javax.swing.JTextField roomtype1;
    private javax.swing.JTextArea spnote;
    // End of variables declaration//GEN-END:variables

    private static class Statement {

        public Statement() {
        }

        private ResultSet executeQuery(String query) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    private static class DefaultTableModel {

        public DefaultTableModel() {
        }

        private DefaultTableModel(String[][] records, String[] cols) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void addRow(String[] tbData) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private Object getValueAt(int selectedRowIndex, int i) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void addRow(Object[] row) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setRowCount(int i) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }

        private void setRowcount(int i) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }
}
